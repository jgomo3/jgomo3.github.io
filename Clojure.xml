<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="http://jgomo3.info/" rel="self" type="application/rss+xml"/><title>Blog de Jesús Gómez (jgomo3)</title><link>http://jgomo3.info/</link><description>Información pública de mi persona y artículos en su mayoría de computación</description><lastBuildDate>Tue, 15 Oct 2024 00:21:12 -0230</lastBuildDate><generator>clj-rss</generator><item><guid>http://jgomo3.info/posts-output/2021-10-24-por-fin-entiendo-lazy-seq/</guid><link>http://jgomo3.info/posts-output/2021-10-24-por-fin-entiendo-lazy-seq/</link><title>¡Por fin entiendo lazy-seq!</title><description>lazy-seq es una de esas funciones que no he tenido que utilizar
mucho.La explicación que le doy a ese fenómeno es que la biblioteca estándar
de Clojure nos ofrece una colección de funciones superiores que,
usando lazy-seq en el fondo, me ha permitido resolver todos los
problemas en los cuales dicha función es pertinente para la solución.</description><pubDate>Sun, 24 Oct 2021 00:00:00 -0230</pubDate></item><item><guid>http://jgomo3.info/posts-output/2021-10-11-clojure-cli/</guid><link>http://jgomo3.info/posts-output/2021-10-11-clojure-cli/</link><title>Clojure CLI</title><description>En el artículo Clojure el Jar
exploré cómo utilizar clojure.main de forma «primitiva».Para programas más complejos, dividido en módulos, que dependan de
bibliotecas de terceros, que requieran «recursos», etc., puede ser muy
complicado preparar el entorno de ejecución para que el programa pueda
acceder a dichas elementos.</description><pubDate>Mon, 11 Oct 2021 00:00:00 -0230</pubDate></item><item><guid>http://jgomo3.info/posts-output/2021-10-09-clojure-el-jar/</guid><link>http://jgomo3.info/posts-output/2021-10-09-clojure-el-jar/</link><title>Clojure el Jar</title><description>Los clojuristas estamos acostumbrados a interactuar con Clojure con
las órdenes clojure o clj.Lo que para muchos puede ser algo desconocido es el hecho de que esos
comandos son en realidad unos «scripts» escritos en Bash, conocidos
como «Clojure CLI», y que en realidad, Clojure es un programa
distribuido como un .jar.</description><pubDate>Sat, 09 Oct 2021 00:00:00 -0230</pubDate></item><item><guid>http://jgomo3.info/posts-output/2021-09-23-clojure-y-java/</guid><link>http://jgomo3.info/posts-output/2021-09-23-clojure-y-java/</link><title>Clojure y Java</title><description>Clojure es un lenguaje «hospedado», lo que significa que el entorno de
ejecución es uno que define y controla un tercero (el anfitrión) que
típicamente es otro lenguaje de programación.Los anfitriones más conocidos de Clojure son Java y Javascript.</description><pubDate>Thu, 23 Sep 2021 00:00:00 -0230</pubDate></item><item><guid>http://jgomo3.info/posts-output/2021-07-21-ftp-hog/</guid><link>http://jgomo3.info/posts-output/2021-07-21-ftp-hog/</link><title>ftp-hog: sencillo servidor ftp a la MailHog</title><description>Hace tiempo tuve que trabajar con FTP.Cuando uno desarrolla sistemas que deben interactuar con sistemas de
terceros, ayuda mucho tener un sustituto que podamos controlar
totalmente.</description><pubDate>Wed, 21 Jul 2021 00:00:00 -0230</pubDate></item></channel></rss>